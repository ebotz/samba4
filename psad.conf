input {
    file {
        path => '/var/log/psad.log' # the location of our psad logfile
        type => 'psad' # assign a type so we can easily process this in the filters
    }
}

filter {
    # only process lines which are of type 'psad'; this is set in the input section
    if [type] == "psad" {

        # parse for detected scans
        grok {
            patterns_dir    => "/etc/logstash/patterns/" # specify the folder where logstash can find your patterns file
            match           => [ "message", "%{PSAD_SCAN_DETECTED}" ]
            add_tag         => [ "psad", "scan-detected" ] # add tags so we can determine what to do with each type of line
            tag_on_failure  => [] # do not add tags on failure just yet, first check the other line types
        }

        # parse for signature match
        if "psad" not in [tags] {
            grok {
                patterns_dir    => "/etc/logstash/patterns/"
                match           => [ "message", "%{PSAD_SIGNATURE_MATCH}" ]
                add_tag         => [ "psad", "signature-match" ]
                tag_on_failure  => []
            }
        }

        # parse for auto block
        if "psad" not in [tags] {
            grok {
                patterns_dir    => "/etc/logstash/patterns/"
                match           => [ "message", "%{PSAD_AUTO_BLOCK}" ]
                add_tag         => [ "psad", "iptables-auto-block" ]
                tag_on_failure  => []
            }
        }

        # parse for auto unblock
        if "psad" not in [tags] {
            grok {
                patterns_dir    => "/etc/logstash/patterns/"
                match           => [ "message", "%{PSAD_AUTO_UNBLOCK}" ]
                add_tag         => [ "psad", "iptables-auto-unblock" ]
                tag_on_failure  => []
            }
        }

        # parse for psad warning
        if "psad" not in [tags] {
            grok {
                patterns_dir    => "/etc/logstash/patterns/"
                match           => [ "message", "%{PSAD_WARNING}" ]
                add_tag         => [ "psad", "warning" ]
                tag_on_failure  => []
            }
        }

        # parse for psad notice
        if "psad" not in [tags] {
            grok {
                patterns_dir    => "/etc/logstash/patterns/"
                match           => [ "message", "%{PSAD_NOTICE}" ]
                add_tag         => [ "psad", "service-notice" ]
                tag_on_failure  => []
            }
        }

        # check for unmatched loglines
        # if you find these often, I may have missed a line type and we will need to add a
        # pattern for it; please send me any such lines so I can create the grok pattern
        if "psad" not in [tags] {
            mutate {
                add_tag         => [ "psad", "unmatched-logline" ]
            }
        }

    }
}
